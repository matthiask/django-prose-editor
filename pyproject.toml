[build-system]
build-backend = "hatchling.build"

requires = [
  "hatchling",
]

[project]
name = "django-prose-editor"
description = "Prose editor for the Django admin based on ProseMirror"
readme = "README.rst"
license = { text = "BSD-3-Clause" }
authors = [
  { name = "Matthias Kestenholz", email = "mk@feinheit.ch" },
]
requires-python = ">=3.10"
classifiers = [
  "Environment :: Web Environment",
  "Framework :: Django",
  "Framework :: Django :: 4.2",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: BSD License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
  "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
  "Topic :: Software Development",
  "Topic :: Software Development :: Libraries :: Application Frameworks",
]
dynamic = [
  "version",
]
dependencies = [
  "django>=4.2",
  "django-js-asset>=3.1.2",
]

optional-dependencies.sanitize = [
  "nh3>=0.3",
]
optional-dependencies.tests = [
  "asgiref",
  "coverage",
  "nh3>=0.3",
  "pytest",
  "pytest-asyncio",
  "pytest-cov",
  "pytest-django",
  "pytest-playwright",
]
urls.Documentation = "https://django-prose-editor.readthedocs.io/"

urls.Homepage = "https://github.com/matthiask/django-prose-editor/"

[tool.hatch.build]
include = [
  "django_prose_editor/",
]

[tool.hatch.version]
path = "django_prose_editor/__init__.py"

[tool.ruff]
target-version = "py311"

fix = true
show-fixes = true
lint.extend-select = [
  # flake8-bugbear
  "B",
  # flake8-comprehensions
  "C4",
  # mmcabe
  "C90",
  # flake8-django
  "DJ",
  "E",
  # pyflakes, pycodestyle
  "F",
  # flake8-boolean-trap
  "FBT",
  # flake8-logging-format
  "G",
  # isort
  "I",
  # flake8-gettext
  "INT",
  # pep8-naming
  "N",
  # pygrep-hooks
  "PGH",
  # flake8-pie
  "PIE",
  # pylint
  "PLC",
  "PLE",
  "PLW",
  # flake8-pytest-style
  "PT",
  # unused noqa
  "RUF100",
  # pyupgrade
  "UP",
  "W",
  # flake8-2020
  "YTT",
]
lint.extend-ignore = [
  # Stop pestering me, the default raise behavior is great
  "B904",
  # Allow zip() without strict=
  "B905",
  # No line length errors
  "E501",
  # Actually not recommended anymore
  "UP038",
]
lint.per-file-ignores."*/migrat*/*" = [
  # Allow using PascalCase model names in migrations
  "N806",
  # Ignore the fact that migration files are invalid module names
  "N999",
]
lint.isort.combine-as-imports = true
lint.isort.lines-after-imports = 2
lint.mccabe.max-complexity = 15

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "testapp.settings"
python_files = "test_*.py"
addopts = "--strict-markers"
testpaths = [ "tests" ]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"
markers = [
  "e2e: End-to-end browser tests",
]
